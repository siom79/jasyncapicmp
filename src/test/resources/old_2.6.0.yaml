asyncapi: "2.6.0"
id: 'https://github.com/siom79/jasyncapicmp'
defaultContentType: application/json
info:
  title: AsyncAPI Sample App
  version: 0.1.0
  description: This is a sample app.
  termsOfService: https://asyncapi.org/terms/
  contact:
    name: API Support
    url: https://www.asyncapi.org/support
    email: team@asyncapi.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  development:
    url: localhost:5672
    description: Development AMQP broker.
    protocol: amqp
    protocolVersion: 0-9-1
    tags:
      - name: "env:development"
        description: "This environment is meant for developers to run their own tests."
  staging:
    url: 'rabbitmq.in.mycompany.com:5672'
    protocol: amqp
    description: RabbitMQ broker. Use the `env` variable to point to either `production`.
    variables:
      env:
        description: Environment to connect to. It can be either `production` or `staging`.
        enum:
          - production
          - staging
channels:
  userSignedUp:
    subscribe:
      operationId: userSignup
      summary: Action to sign a user up.
      description: A longer description
      message:
        contentType: application/json
        tags:
          - name: user
            description: "User-Tag"
          - name: signup
          - name: register
        headers:
          type: object
          properties:
            correlationId:
              description: Correlation ID set by application
              type: string
            applicationInstanceId:
              description: Unique identifier for a given instance of the publishing application
              type: string
        payload:
          type: object
          properties:
            user:
              type: string
        correlationId:
          description: Default Correlation ID
          location: $message.header#/correlationId
        traits:
          - $ref: "#/components/messageTraits/commonHeaders"
        examples:
          - name: SimpleSignup
            summary: A simple UserSignup example message
            headers:
              correlationId: my-correlation-id
              applicationInstanceId: myInstanceId
            payload:
              user:
                someUserKey: someUserValue
              signup:
                someSignupKey: someSignupValue
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
  servers:
    development:
      url: "{stage}.in.mycompany.com:{port}"
      description: RabbitMQ broker
      protocol: amqp
      protocolVersion: 0-9-1
      variables:
        stage:
          $ref: "#/components/serverVariables/stage"
        port:
          $ref: "#/components/serverVariables/port"
  serverVariables:
    stage:
      default: demo
      description: This value is assigned by the service provider, in this example `mycompany.com`
    port:
      default: '5672'
  channels:
    user/signedup:
      subscribe:
        message:
          $ref: "#/components/messages/userSignUp"
  messages:
    userSignUp:
      summary: Action to sign a user up.
      description: |
        Multiline description of what this action does.
        Here you have another line.
      tags:
        - name: user
        - name: signup
      headers:
        type: object
        properties:
          applicationInstanceId:
            description: Unique identifier for a given instance of the publishing application
            type: string
      payload:
        type: object
        properties:
          user:
            type: object
          signup:
            type: object
  parameters:
    userId:
      description: Id of the user.
      schema:
        type: string
  correlationIds:
    default:
      description: Default Correlation ID
      location: $message.header#/correlationId
  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          my-app-header:
            type: integer
            minimum: 0
            maximum: 100
